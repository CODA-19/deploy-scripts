---
#
# How to invoke on localhost:
#
#   ansible-playbook --inventory localhost, playbooks/misc/bootstrap.yml
#

- name: "BOOTSTRAP PLAYBOOK - PLAY #1 - ASK INFORMATIONS AND STORE IT IN LOCAL FACTS"
  hosts: all
  connection: local
  gather_facts: no
  vars:
    facts_file: /etc/ansible/facts.d/coda19.fact
    vault_pass_file: /etc/ansible/vault.pass
  vars_prompt:

    - prompt: "Enter your site ID (110-120)"
      name: _prompt_site_id
      default: "{{ lookup('ini', 'id section=site file=' + facts_file, errors='ignore') }}"
      private: no

    - prompt: "Enter your site VAULT PASSWORD"
      name: _prompt_site_vault_pass
      default: "{{ lookup('file', vault_pass_file, errors='ignore') | default('') }}"
      private: no

    # This proxy setting is used for bootstrap process only.
    - prompt: "Enter your site PROXY, if required, for internet access (format: http://<host>:<port>)"
      name: _prompt_proxy
      default: "{{ lookup('ini', 'proxy section=site file=' + facts_file, errors='ignore') }}"
      private: no

    - prompt: "Enter this VM role [orange|green]"
      name: _prompt_host_role
      default: "{{ lookup('ini', 'role section=host file=' + facts_file, errors='ignore') }}"
      private: no

  tasks:

    ###### LOCAL FACTS

    - name: FILE | Ensure /etc/ansible/facts.d directory is present
      file:
        path: /etc/ansible/facts.d/
        state: directory

    - name: INI_FILE | Add entries to /etc/ansible/facts.d/coda19.fact
      ini_file:
        path: /etc/ansible/facts.d/coda19.fact
        section: "{{ item.section }}"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
      with_items:
        - section: site
          option: id
          value: "{{ _prompt_site_id }}"
        - section: site
          option: proxy
          value: "{{ _prompt_proxy }}"
        - section: host
          option: role
          value: "{{ _prompt_host_role | lower }}"

    ###### PASSPHRASE

    - name: COPY | Create vault.pass file
      copy:
        content: "{{ _prompt_site_vault_pass }}"
        dest: "{{ vault_pass_file }}"
        owner: root
        group: wheel
        mode: 0660

################################################################################

- name: "BOOTSTRAP PLAYBOOK - PLAY #2 - SETUP ANSIBLE-PULL"
  hosts: all
  connection: local
  gather_facts: yes
  vars:
    _ansible_pull_repo_url: https://github.com/CODA-19/deploy-scripts.git
    _ansible_pull_directory: /opt/coda19/deploy-scripts-pull
    _ansible_pull_log_dir: /var/log/ansible
    _ansible_pull_cron_name: "EXECUTE_ANSIBLE_PULL"
    # Interval in minutes
    _ansible_pull_cron_interval: 10

  tasks:

    - name: FILE | Ensure log directory exists
      file:
        path: "{{ _ansible_pull_log_dir }}"
        state: directory
        owner: root
        group: wheel
        mode: 0750

    - name: COPY | Create /usr/local/bin/execute-ansible-pull.sh
      copy:
        dest: /usr/local/bin/execute-ansible-pull.sh
        owner: root
        group: wheel
        mode: 0755
        content: |
          #!/usr/bin/env bash
          #
          # This script is generated by bootstrap.yml playbook.
          #

          #### Parameters

          export PULL_BASE={{ _ansible_pull_directory }}
          export ANSIBLE_BASE=${PULL_BASE}/ansible
          export ANSIBLE_ROLES_PATH=${ANSIBLE_BASE}/roles

          {% if ansible_local.coda19.site.proxy is defined and ansible_local.coda19.site.proxy|length > 0 %}
          #### Export proxy, as defined in localfacts while bootstraping.
          #### We're doing this here to overcome the chicken-egg problem.
          #### Configured settings in /etc/profile.d/proxy.sh will take precedence.

          if [[ ! -f /etc/profile.d/proxy.sh ]]; then
            export PROXY={{ ansible_local.coda19.site.proxy }}
            export HTTPS_PROXY=$PROXY
            export HTTP_PROXY=$PROXY
            export https_proxy=$PROXY
            export http_proxy=$PROXY
          fi
          {% endif %}

          #### Be safe, load required environment stuff

          if [[ -f /etc/profile.d/proxy.sh ]]; then
            source /etc/profile.d/proxy.sh
          fi

          if [[ -f /usr/local/bin/env-ansible.sh ]]; then
            source /usr/local/bin/env-ansible.sh
          fi

          #### Execute ansible-pull
          #### If already running: dont' launch and exit

          (
            flock -n 200 || exit 1

            ansible-pull \
              --url {{ _ansible_pull_repo_url }} \
              --vault-password-file /etc/ansible/vault.pass \
              --directory ${PULL_BASE} \
              --inventory localhost, \
              ${ANSIBLE_BASE}/playbooks/localhost.yml

          ) 200>/var/lock/execute-ansible-pull.lock

    - name: CRON | Create ansible-pull cron job
      cron:
        name: "{{ _ansible_pull_cron_name }}"
        job: /usr/local/bin/execute-ansible-pull.sh > {{ _ansible_pull_log_dir }}/ansible-pull-$( date +\%Y\%m\%d-\%H\%M\%S ).log 2>&1
        minute: "*/{{ _ansible_pull_cron_interval }}"
        user: root
