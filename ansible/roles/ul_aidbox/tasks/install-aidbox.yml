---

- name: AIDBOX | GROUP | Add the group 'aidbox'
  group:
    name: aidbox
    system: no

- name: AIDBOX | USER | Add the user 'aidbox'
  user:
    name: aidbox
    comment: AidBox Service account
    group: aidbox
    home: /var/lib/aidbox
    system: no
  register: _user

- name: AIDBOX | TEMPLATE | Generate /etc/default/aidbox
  template:
    src: etc/default/aidbox.j2
    dest: /etc/default/aidbox
    owner: aidbox
    group: aidbox
    mode: 0640
  notify:
    - restart aidbox

- name: AIDBOX | TEMPLATE | Copy systemd service unit
  template:
    src: etc/systemd/system/aidbox.service.j2
    dest: /etc/systemd/system/aidbox.service
    owner: root
    group: root
    mode: 0664
  notify:
    - restart aidbox

# Create data directory
- name: AIDBOX | FILE | Ensure /data/aidbox is present
  file:
    dest: /data/aidbox
    owner: aidbox
    group: aidbox
    mode: 0750
    state: directory

# Workarounds for these errors.
# As of 2020-12-03, it only happens when using upstream podman distribution.
#   https://github.com/containers/podman/issues/8539
#   ERRO[0000] cannot mkdir /var/lib/aidboxdb/rundir/libpod: mkdir /var/lib/aidboxdb/rundir/libpod: no such file or directory
# - name: AIDBOXDB | WORKAROUND | SHELL | Create missing directories and symlinks
#   shell: |
#     mkdir -p  /tmp/run-{{ _user.uid }}
#     ln -sT    /tmp/run-{{ _user.uid }} /tmp/podman-run-{{ _user.uid }}
#     mkdir -p  /tmp/run-{{ _user.uid }}/libpod
#     mkdir -p  {{ _user.home }}/rundir/libpod
#   args:
#     creates: "/tmp/podman-run-{{ _user.uid }}"
#     warn: false
#   become: yes
#   become_user: aidbox

# Ensure image is present
#- name: "AIDBOX | PODMAN_IMAGE | Pull image {{ ul_aidbox_image_registry }}/{{ ul_aidbox_image_name }}:{{ ul_aidbox_image_tag }}"
#  podman_image:
#    name: "{{ ul_aidbox_image_registry }}/{{ ul_aidbox_image_name }}"
#    tag: "{{ ul_aidbox_image_tag }}"
#    state: present
#    force: no
#  register: _image_pull
#  become: yes
#  become_user: aidbox

# Check if local and remote image signature matches and, if not the case, pull it
- name: INCLUDE_TASKS | check-pull-image.yml
  include_tasks: check-pull-image.yml
  vars:
    container_name: aidbox
    image_registry: "{{ ul_aidbox_image_registry }}"
    image_name: "{{ ul_aidbox_image_name }}"
    image_tag: "{{ ul_aidbox_image_tag }}"

- name: AIDBOX | SYSTEMD | Ensure aidbox.service is started and enabled
  systemd:
    name: aidbox
    state: started
    enabled: yes
    daemon_reload: yes
  # We register this task status.
  # Don't start + restart service with handlers, usualy on first run.
  register: _systemd_aidbox

- meta: flush_handlers
