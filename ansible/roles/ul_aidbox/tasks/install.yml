---
##
## AIDBOX.DB
##
# Health Samurai provides a ready-to-use  Postgresql Container with all required extensions

# useradd automatically adds the subordinate user (/etc/subuid)
- name: GROUP | Add the group 'aidboxdb'
  group:
    name: aidboxdb
    system: yes

# useradd automatically adds the subordinate user (/etc/subgid)
- name: USER | Add the user 'aidboxdb'
  user:
    name: aidboxdb
    comment: AidBox DB Service account
    group: aidboxdb
    system: yes

# Where the config stuff goes
- name: FILE | Ensure /etc/aidboxdb is present
  file:
    dest: /etc/aidboxdb
    owner: aidboxdb
    group: aidboxdb
    mode: 0750
    state: directory

# Where the PosgtreSQL stuff goes
- name: FILE | Ensure /data/aidboxdb is present
  file:
    dest: /data/aidboxdb
    owner: aidboxdb
    group: aidboxdb
    mode: 0750
    state: directory

# Generate the file that contains the variables for aidBoxDB (PostgreSQL)
- name: TEMPLATE | Generate /etc/aidboxdb/aidboxdb_vars
  template:
    src: etc/aidboxdb/aidboxdb_vars.j2
    dest: /etc/aidboxdb/aidboxdb_vars
    owner: aidboxdb
    group: aidboxdb
    mode: 0640

- name: FILE | Ensure /run/aidboxdb is present
  file:
    dest: /run/aidboxdb
    owner: aidboxdb
    group: aidboxdb
    mode: 0750
    state: directory

# Generates the systemd workunit
# Ref.
- name: TEMPLATE | Copy systemd workunit
  template:
    src: etc/systemd/system/aidboxdb.service.j2
    dest: /etc/systemd/system/aidboxdb.service
    owner: root
    group: root
    mode: 0664

##
## AIDBOX
##

# Sets up a local user 'aidbox' (local group 'aidbox') and its subuid/subgid for a rootless container
# Unfortunately, the 'user' and 'group' modules have no support for subuid/subguid in Ansible 2.9
- name: GROUP | Add the group 'aidbox'
  group:
    name: aidbox
    system: no

- name: USER | Add the user 'aidbox'
  user:
    name: aidbox
    comment: AidBox Service account
    group: aidbox
    system: no

# Where the config stuff goes
- name: FILE | Ensure /etc/aidbox is present
  file:
    dest: /etc/aidbox
    owner: aidbox
    group: aidbox
    mode: 0750
    state: directory

# Generate the file that contains the variables for the REST service container
# TODO: use different credential between sites
- name: TEMPLATE | Generate /etc/aidbox/aidbox_vars
  template:
    src: etc/aidbox/aidbox_vars.j2
    dest: /etc/aidbox/aidbox_vars
    owner: aidbox
    group: aidbox
    mode: 0640

# Only root can write inside /run
- name: FILE | Ensure /run/aidbox is present
  file:
    dest: /run/aidbox
    owner: aidbox
    group: aidbox
    mode: 0750
    state: directory

# Generates the systemd workunit
# Ref.
- name: TEMPLATE | Copy systemd workunit
  template:
    src: etc/systemd/system/aidbox.service.j2
    dest: /etc/systemd/system/aidbox.service
    owner: root
    group: root
    mode: 0664

# On the first start, podman would pull the image however let's do this now
# WARNING: The rest service will connect to a licence server located in the cloud over https (TCP/443)
# and the container will be stuck until the licence key validation passed, if you are behind
# a proxy, use
- name: PODMAN_IMAGE | Pull an official aidbox REST service image
  podman_image:
    name: "{{ ul_aidbox_image }}"
    tag: "{{ ul_aidbox_image_tag }}"
  become: yes
  become_user: aidbox
