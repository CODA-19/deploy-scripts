---
##
## AIDBOX.DB
##
# Health Samurai provides a ready-to-use  Postgresql Container with all required extensions

# useradd automatically adds the subordinate user (/etc/subuid)
- name: GROUP | Add the group 'aidboxdb'
  group:
    name: aidboxdb
    system: no

# useradd automatically adds the subordinate user (/etc/subgid)
- name: USER | Add the user 'aidboxdb'
  user:
    name: aidboxdb
    comment: AidBox DB Service account
    group: aidboxdb
    system: no

# Where the config stuff goes
- name: FILE | Ensure /etc/aidboxdb is present
  file:
    dest: /etc/aidboxdb
    owner: aidboxdb
    group: aidboxdb
    mode: 0750
    state: directory

# Where the PosgtreSQL stuff goes
- name: FILE | Ensure /data/aidboxdb is present
  file:
    dest: /data/aidboxdb
    owner: aidboxdb
    group: aidboxdb
    mode: 0750
    state: directory

# Generate the file that contains the variables for aidBoxDB (PostgreSQL)
- name: TEMPLATE | Generate /etc/aidboxdb/aidboxdb_vars
  template:
    src: etc/aidboxdb/aidboxdb_vars.j2
    dest: /etc/aidboxdb/aidboxdb_vars
    owner: aidboxdb
    group: aidboxdb
    mode: 0640

- name: FILE | Ensure /run/aidboxdb is present
  file:
    dest: /run/aidboxdb
    owner: aidboxdb
    group: aidboxdb
    mode: 0750
    state: directory

# Generates the systemd workunit
# Ref.
- name: TEMPLATE | Copy systemd workunit
  template:
    src: etc/systemd/system/aidboxdb.service.j2
    dest: /etc/systemd/system/aidboxdb.service
    owner: root
    group: root
    mode: 0664

# 'podman system update' is required else, an error will be thrown :
# "there might not be enough IDs available in the namespace (requested 0:42 for /etc/gshadow): lchown /etc/gshadow: invalid argument"
- name: COMMAND | podman system migrate
  command: /bin/podman system migrate
  become: yes
  become_user: aidboxdb

# systemctl start will be initiated but the rootless cronjob, add adequate sudoers definitions
- name: COPY | Copy the AidBoxDB sudoers file
  copy:
    src: etc/sudoers.d/aidboxdb
    dest: /etc/sudoers.d/aidboxdb
    mode: 0644
    owner: root
    group: root

# Install the cron job that will check/pull the podman image and start the service upon it next run
# The script has been installed by the _common role
- name: CRON | Create the "pull & restart" job for AidBoxDB
  cron:
    name: "aidboxdb image check"
    cron_file: "/etc/crontab"
    user: "aidboxdb"
    minute: "/15"
    hour: "*"
    day: "*"
    month: "*"
    weekday: "*"
    job: "/usr/local/bin/update_podman_image.sh {{ ul_aidbox_db_image_registry }} {{ ul_aidbox_db_image }} {{ ul_aidbox_db_image_tag }} aidboxdb"

# At the end, enable !
# NOTE: As we use ansible_pull on this role, this paragraph will be excuted on each call, to disable the service,
# deactivate the corresponding Cron job.
- name: SYSTEMD | Enable AidboxDB
  systemd:
    name: aidboxdb
    enabled: yes
    daemon_reload: yes

##
## AIDBOX
##

# Sets up a local user 'aidbox' (local group 'aidbox') and its subuid/subgid for a rootless container
# Unfortunately, the 'user' and 'group' modules have no support for subuid/subguid in Ansible 2.9
- name: GROUP | Add the group 'aidbox'
  group:
    name: aidbox
    system: no

- name: USER | Add the user 'aidbox'
  user:
    name: aidbox
    comment: AidBox Service account
    group: aidbox
    system: no

# Where the config stuff goes
- name: FILE | Ensure /etc/aidbox is present
  file:
    dest: /etc/aidbox
    owner: aidbox
    group: aidbox
    mode: 0750
    state: directory

# Generate the file that contains the variables for the REST service container
# TODO: use different credential between sites
- name: TEMPLATE | Generate /etc/aidbox/aidbox_vars
  template:
    src: etc/aidbox/aidbox_vars.j2
    dest: /etc/aidbox/aidbox_vars
    owner: aidbox
    group: aidbox
    mode: 0640

# Only root can write inside /run
- name: FILE | Ensure /run/aidbox is present
  file:
    dest: /run/aidbox
    owner: aidbox
    group: aidbox
    mode: 0750
    state: directory

# Generates the systemd workunit
# Ref.
- name: TEMPLATE | Copy systemd workunit
  template:
    src: etc/systemd/system/aidbox.service.j2
    dest: /etc/systemd/system/aidbox.service
    owner: root
    group: root
    mode: 0664

# 'podman system update' is required else, an error will be thrown :
# "there might not be enough IDs available in the namespace (requested 0:42 for /etc/gshadow): lchown /etc/gshadow: invalid argument"
- name: COMMAND | podman system migrate
  command: /bin/podman system migrate
  become: yes
  become_user: aidbox

# systemctl start will be initiated but the rootless cronjob, add adequate sudoers definitions
- name: COPY | Copy the AidBox sudoers file
  copy:
    src: etc/sudoers.d/aidbox
    dest: /etc/sudoers.d/aidbox
    mode: 0644
    owner: root
    group: root

# Install the cron job that will check/pull the podman image and start the service upon it next run
# The script has been installed by the _common role
- name: CRON | Create the "pull & restart" job for AidBoxDB
  cron:
    name: "aidbox image check"
    cron_file: "/etc/crontab"
    user: "aidbox"
    minute: "/15"
    hour: "*"
    day: "*"
    month: "*"
    weekday: "*"
    job: "/usr/local/bin/update_podman_image.sh {{ ul_aidbox_image_registry }} {{ ul_aidbox_image }} {{ ul_aidbox_image_tag }} aidbox"

# At the end, enable !
# NOTE: As we use ansible_pull on this role, this paragraph will be excuted on each call, to disable the service,
# deactivate the corresponding Cron job.
- name: SYSTEMD | Enable Aidbox
  systemd:
    name: aidbox
    enabled: yes
    daemon_reload: yes
