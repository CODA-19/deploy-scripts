---

###### ANSIBLE-VENV

- name: "PIP | {{ _common_ansible_venv1_path }} - Upgrade pip to latest"
  pip:
    virtualenv: "{{ _common_ansible_venv1_path }}"
    state: latest
    name: pip

- name: "PIP | {{ _common_ansible_venv1_path }} - Remove unused packages"
  pip:
    virtualenv: "{{ _common_ansible_venv1_path }}"
    state: absent
    name:
      - botocore
      - boto3
      - s3transfer

## Create a second venv

- name: "PIP | {{ _common_ansible_venv2_path }} - Try to spin a new venv with hard requirements"
  pip:
    virtualenv: "{{ _common_ansible_venv2_path }}"
    virtualenv_python: python3
    requirements: "{{ inventory_dir }}/requirements.txt"

###### ANSIBLE-ACTIVATORS

- name: TEMPLATE | Generate activators - /etc/profile.d/env-ansible.sh
  template:
    src: etc/profile.d/env-ansible.sh.j2
    dest: /etc/profile.d/env-ansible.sh
    mode: 0744

- name: TEMPLATE | Generate activators - /user/local/bin/env-ansible.sh
  template:
    src: usr/local/bin/env-ansible.sh.j2
    dest: /usr/local/bin/env-ansible.sh
    mode: 0755

###### ANSIBLE-PULL

- name: TEMPLATE | Generate /usr/local/bin/execute-ansible-pull.sh
  template:
    src: usr/local/bin/execute-ansible-pull.sh.j2
    dest: /usr/local/bin/execute-ansible-pull.sh
    mode: 0750

# NOTE: this CRON NAME and FILE must converge with the cron installed while bootstrapping (playbooks/misc/bootstrap.yml)
- name: CRON | Create ansible-pull cron job
  cron:
    name: "{{ _common_ansible_pull_cron_name }}"
    job: /usr/local/bin/execute-ansible-pull.sh >/dev/null
    minute: "*/{{ _common_ansible_pull_cron_interval }}"
    user: root
    disabled: "{{ _common_ansible_pull_disabled | bool }}"
