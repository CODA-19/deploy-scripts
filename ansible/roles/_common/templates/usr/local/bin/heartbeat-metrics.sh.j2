#!/usr/bin/env bash
#
# {{ ansible_managed }}
#

################################################################################
###### LOAD REQUIRED ENVIRONMENT STUFF
################################################################################

[ -f /etc/profile.d/proxy.sh       ] && source /etc/profile.d/proxy.sh
[ -f /etc/profile.d/env-ansible.sh ] && source /etc/profile.d/env-ansible.sh && env-ansible

################################################################################
###### DEFINING SCRIPT VARIABLES AND PARAMETERS
################################################################################

# Global

CODA19_SITE_ID={{ coda19_site_id }}
CODA19_HOST_ROLE={{ coda19_host_role }}

CODA19_HEARTBEAT_BASE_URL={{ _common_heartbeat_base_url }}
CODA19_HEARTBEAT_TOKEN=$( cat /etc/coda19/heartbeat-token )

CODA19_CURL_CONNECT_TIMEOUT={{ _common_curl_connect_timeout }}
CODA19_CURL_MAX_TIME={{ _common_curl_max_time }}

# Script specifics

SLEEP_TIME=10

################################################################################
###### QUERY LOCAL NODE_EXPORTER AND PUSH TO HEARTBEAT SERVICE
################################################################################

# This part should not execute in parallel
(
  # If already running: dont continue and exit
  flock -n 300 || exit 1

  # Loop: fetch, submit, sleep, and repeat
  while true; do

    # Fetch
    METRICS_FILE=$( mktemp )
    curl \
      --silent \
      --output ${METRICS_FILE} \
      --connect-timeout ${CODA19_CURL_CONNECT_TIMEOUT} \
      --max-time ${CODA19_CURL_MAX_TIME} \
      http://localhost:9100/metrics

    # Submit
    curl \
      --silent \
      --connect-timeout ${CODA19_CURL_CONNECT_TIMEOUT} \
      --max-time ${CODA19_CURL_MAX_TIME} \
      --request POST \
      --header "Authorization: ${CODA19_HEARTBEAT_TOKEN}" \
      --header "Content-Type: text/plain" \
      --data-binary @${METRICS_FILE} \
      ${CODA19_HEARTBEAT_BASE_URL}/metrics/${CODA19_SITE_ID}/${CODA19_HOST_ROLE}

    # Clean and sleep
    rm -rf ${METRICS_FILE}
    sleep ${SLEEP_TIME}

  done
) 300>/var/lock/push-metrics.lock
