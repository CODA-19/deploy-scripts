#!/usr/bin/env bash
#
# {{ ansible_managed }}
#

set -e

################################################################################
###### LOAD REQUIRED ENVIRONMENT STUFF
################################################################################

[ -f /etc/profile.d/proxy.sh       ] && source /etc/profile.d/proxy.sh
[ -f /etc/profile.d/env-ansible.sh ] && source /etc/profile.d/env-ansible.sh && env-ansible

################################################################################
###### DEFINING SCRIPT VARIABLES AND PARAMETERS
################################################################################

# Global

CODA19_SITE_ID={{ coda19_site_id }}
CODA19_HOST_ROLE={{ coda19_host_role }}

CODA19_HEARTBEAT_BASE_URL={{ _common_heartbeat_base_url }}
CODA19_HEARTBEAT_TOKEN=$( cat /etc/coda19/heartbeat-token )

CODA19_CURL_CONNECT_TIMEOUT={{ _common_curl_connect_timeout }}
CODA19_CURL_MAX_TIME={{ _common_curl_max_time }}

# Script specifics

  # ... nothing yet ...

################################################################################
###### ANSIBLE FACTS
################################################################################

# GATHER

FACTS=$( mktemp )
ansible \
  localhost \
  --inventory localhost, \
  --connection local \
  -m setup \
    | sed '1s/.*/{/' > $FACTS

# PUSH

curl \
  --silent \
  --connect-timeout ${CODA19_CURL_CONNECT_TIMEOUT} \
  --max-time ${CODA19_CURL_MAX_TIME} \
  --request POST \
  --header "Authorization: ${CODA19_HEARTBEAT_TOKEN}" \
  --header "Content-Type: application/json" \
  --data-binary @${FACTS} \
  ${CODA19_HEARTBEAT_BASE_URL}/facts/${CODA19_SITE_ID}/${CODA19_HOST_ROLE}

rm -f $FACTS

# FETCH BACK

# curl \
#   --request GET \
#   --header "Authorization: ${CODA19_HEARTBEAT_TOKEN}" \
#   ${CODA19_HEARTBEAT_BASE_URL}/facts/${CODA19_SITE_ID}/${CODA19_HOST_ROLE}

################################################################################
###### OTHER SYSTEM INFORMATION
################################################################################

function header {
    echo
    echo "**********************************************************************"
    echo "*** $1"
    echo "**********************************************************************"
    echo
    echo $( date --iso-8601=seconds )
    echo
}

SYSINFO=$( mktemp )

{
  # header "ANSIBLE VIRTUAL ENVIRONMENT - pip list --outdated"
  # pip list --outdated

  # header "ANSIBLE VIRTUAL ENVIRONMENT - pip freeze"
  # pip freeze

  # header "PACKAGE LIST"
  # rpm -qa | sort

  header "CONTENT OF /DATA"
  ls -lah /data

  header "PROCESS TREE"
  ps auxf

  header "LISTENING TCP SOCKETS"
  netstat -lntp

{% if coda19_host_role == 'orange' %}

  header "AIDBOXDB.SERVICE STATUS AND LOGS"
  systemctl  status aidboxdb --full --lines=0
  echo
  journalctl --unit=aidboxdb --full --lines=25 --no-pager --boot

  header "AIDBOX.SERVICE STATUS AND LOGS"
  systemctl  status aidbox --full --lines=0
  echo
  journalctl --unit=aidbox --full --lines=25 --no-pager --boot

  header "MINIO.VERSION"
  [ -f /usr/local/bin/minio  ] && /usr/local/bin/minio --version

  header "MINIO.SERVICE STATUS AND LOGS"
  systemctl  status minio  --full --lines=0
  echo
  journalctl --unit=minio  --full --lines=25 --no-pager --boot

  header "ORTHANC.SERVICE STATUS AND LOGS"
  systemctl  status orthanc --full --lines=0
  echo
  journalctl --unit=orthanc --full --lines=25 --no-pager --boot

{% elif coda19_host_role == 'green' %}

  header "CODA19-SITE-API.SERVICE STATUS AND LOGS"
  systemctl  status coda19-site-api  --full --lines=0
  echo
  journalctl --unit=coda19-site-api  --full --lines=50 --no-pager --boot

  header "CODA19-STATS-API.SERVICE STATUS AND LOGS"
  systemctl  status coda19-stats-api  --full --lines=0
  echo
  journalctl --unit=coda19-stats-api  --full --lines=50 --no-pager --boot

  header "CODA19-LEARNING-API.SERVICE STATUS AND LOGS"
  systemctl  status coda19-learning-api  --full --lines=0
  echo
  journalctl --unit=coda19-learning-api  --full --lines=50 --no-pager --boot

{% endif %}

} >> ${SYSINFO}

# PUSH

curl \
  --silent \
  --connect-timeout ${CODA19_CURL_CONNECT_TIMEOUT} \
  --max-time ${CODA19_CURL_MAX_TIME} \
  --request POST \
  --header "Authorization: ${CODA19_HEARTBEAT_TOKEN}" \
  --header "Content-Type: text/plain" \
  --data-binary @${SYSINFO} \
  ${CODA19_HEARTBEAT_BASE_URL}/sysinfo/${CODA19_SITE_ID}/${CODA19_HOST_ROLE}

# CLEANUP

rm -rf ${SYSINFO}
