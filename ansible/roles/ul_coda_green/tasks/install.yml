---

# Sets up a local user 'coda' and its subuid/subgid for a rootless container

- name: GROUP | Add the group 'coda'
  group:
    name: coda
    system: yes

- name: USER | Add the user 'coda'
  user:
    name: coda
    comment: CODA Green Service account
    group: coda
    system: no

# Where the config stuff goes

- name: FILE | Ensure /etc/coda is present
  file:
    dest: /etc/coda
    owner: coda
    group: coda
    mode: 0750
    state: directory

# Generate the file that contains the variables for the REST service container

- name: TEMPLATE | Generate /etc/coda/coda_green_vars
  template:
    src: etc/coda/coda_green_vars.j2
    dest: /etc/coda/coda_green_vars
    owner: coda
    group: coda
    mode: 0640

# Generates the systemd workunit

- name: TEMPLATE | Generate systemd service unit
  template:
    src: etc/systemd/system/coda_green.service.j2
    dest: /etc/systemd/system/coda_green.service
    owner: root
    group: root
    mode: 0664

# 'podman system migrate' is required else, an error will be thrown :
# "there might not be enough IDs available in the namespace (requested 0:42 for /etc/gshadow): lchown /etc/gshadow: invalid argument"
- name: COMMAND | podman system migrate
  command: /bin/podman system migrate
  become: yes
  become_user: coda

# systemctl start will be initiated but the rootless cronjob, add adequate sudoers definitions
- name: COPY | Copy the sudoers file
  copy:
    src: etc/sudoers.d/coda
    dest: /etc/sudoers.d/coda
    mode: 0644
    owner: root
    group: root

# Install the cron job that will check/pull the podman image and start the service upon it next run
# The script has been installed by the ul_podman role
- name: CRON | Create the "pull & restart" job
  cron:
    name: "coda green image check"
    cron_file: "/etc/crontab"
    user: "coda"
    minute: "*/15"
    hour: "*"
    day: "*"
    month: "*"
    weekday: "*"
    job: "/usr/local/bin/update_podman_image.sh {{ ul_coda_green_image_registry }} {{ ul_coda_green_image }} {{ ul_coda_green_image_tag }} coda_green"
