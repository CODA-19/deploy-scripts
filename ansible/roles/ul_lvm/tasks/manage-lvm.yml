---

- name: COMMAND | wipefs - Liste des tables de partitions pour les devices spécifiées
  command: "/sbin/wipefs {{ item.1 }}"
  register: wipefs
  changed_when: false
  with_subelements:
    - "{{ ul_lvm_groups }}"
    - disks

- name: COMMAND | wipefs - Effacer tables de partitions autre que LVM2
  command: "/sbin/wipefs --all --force {{ item.item.1 }}"
  with_items:
    - "{{ wipefs.results }}"
  when:
    - "item.stdout_lines | length > 0"
    - "'LVM2_member' not in item.stdout"

- name: COMMAND | pvresize - Seulement si déjà signature de type LVM2_member
  command: "pvresize {{ item.item.1 }}"
  with_items:
    - "{{ wipefs.results }}"
  when:
    - ul_lvm_pvresize_enabled | bool
    - "'LVM2_member' in item.stdout"
  changed_when: false

- name: LVG | Création des Volume Group(s) (VG)
  lvg:
    vg: "{{ item.vgname }}"
    pvs: "{{ item.disks | join(',') }}"
    state: present
    pesize: "{{ item.pesize | default(omit) }}"
  with_items: "{{ ul_lvm_groups }}"
  when: item.create is defined and item.create | bool

- name: LVOL | Création des Logical Volume(s) (LV)
  lvol:
    vg: "{{ item.0.vgname }}"
    lv: "{{ item.1.lvname }}"
    size: "{{ item.1.size }}"
    state: present
    opts: "{{ item.1.opts | default(omit) }}"
  register: lvm
  with_subelements:
    - "{{ ul_lvm_groups }}"
    - lvnames
  when: >
    (item.0.create is defined and item.0.create | bool) and
    (item.1 is defined and item.1 | length > 0 ) and
    (item.1.create is defined and item.1.create | bool)

- name: FILESYSTEM | Création des filesystems sur les nouveaux Logical Volume(s)
  filesystem:
    fstype: "{{ item.1.filesystem }}"
    dev: "/dev/{{ item.0.vgname }}/{{ item.1.lvname }}"
    resizefs: yes
  with_subelements:
    - "{{ ul_lvm_groups }}"
    - lvnames
  when: >
    (item.0.create is defined and item.0.create | bool) and
    (item.1 is defined and item.1 | length > 0 ) and
    (item.1.create is defined and item.1.create | bool)

- name: MOUNT | Montage des nouveaux systèmes de fichiers
  mount:
    name: "{{ item.1.mount_point }}"
    src: "/dev/{{ item.0.vgname }}/{{ item.1.lvname }}"
    fstype: "{{ item.1.filesystem }}"
    state: mounted
    opts: "{{ item.1.mount_options | default('defaults') }}"
  with_subelements:
    - "{{ ul_lvm_groups }}"
    - lvnames
  when: >
    (item.0.create is defined and item.0.create | bool) and
    (item.1 is defined and item.1 | length > 0 ) and
    (item.1.create is defined and item.1.create | bool) and
    (item.1.mount is defined and item.1.mount)

# Étapes pour retrait

- name: MOUNT | Démonter les systèmes de fichiers
  mount:
    name: "{{ item.1.mount_point }}"
    src: "/dev/{{ item.0.vgname }}/{{ item.1.lvname }}"
    fstype: "{{ item.1.filesystem }}"
    state: absent
  with_subelements:
    - "{{ ul_lvm_groups }}"
    - lvnames
  when: >
    (item.1 is defined and item.1 != 'None') and
    (item.1.create is defined and not item.1.create)

- name: LVOL | Suppression des logical volume(s)
  lvol:
    vg: "{{ item.0.vgname }}"
    lv: "{{ item.1.lvname }}"
    state: absent
    force: yes
  with_subelements:
    - "{{ ul_lvm_groups }}"
    - lvnames
  when: >
    (item.1 is defined and item.1 | length > 0 ) and
    (item.1.create is defined and not item.1.create | bool)

- name: LVG | Suppression des volume group(s)
  lvg:
    vg: "{{ item.vgname }}"
    pvs: "{{ item.disks | join(',') }}"
    state: absent
    force: yes
  with_items: "{{ ul_lvm_groups }}"
  when: item.create is defined and not item.create
