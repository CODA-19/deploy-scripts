###
### {{ ansible_managed }}
###

[Unit]
Description={{ container_name }}
After=network.target

[Service]
Type=simple

User={{ container_name }}
Group={{ container_name }}

# Take no chances, force a stop and remove before starting.
# NOTE: In podman v1.6 there's no --ignore switches for «stop» and «rm»
ExecStartPre=-/usr/bin/podman stop --time {{ ul_coda19_green_container_stop_timeout }} {{ container_name }}
ExecStartPre=-/usr/bin/podman rm --force {{ container_name }}
ExecStartPre=-/usr/bin/rm -f {{ ul_coda19_green_container_pidfile }} {{ ul_coda19_green_container_cidfile }}
ExecStartPre=/bin/mkdir -p /tmp/%n.tmp

ExecStart=/usr/bin/podman run --name {{ container_name }} \
  --conmon-pidfile {{ ul_coda19_green_container_pidfile }} \
  --cidfile {{ ul_coda19_green_container_cidfile }} \
  --env-file /etc/default/{{ container_name }} \
  --log-driver journald \
  --network host \
  --publish {{ container_port }}:{{ container_port }} \
  --volume /data/{{ container_name }}:/data:z \
  --volume /tmp/%n.tmp:/tmp:z \
  --rm --detach \
  {{ ul_coda19_docker_image_registry }}/{{ docker_image_name }}:{{ docker_image_tag }}

# Stop and remove
# NOTE: In podman v1.6 there's no --ignore switches for «stop» and «rm»
ExecStop=-/usr/bin/podman stop --time {{ ul_coda19_green_container_stop_timeout }} {{ container_name }}
ExecStop=-/usr/bin/podman rm --force {{ container_name }}

Restart=on-failure
RestartSec={{ ul_coda19_green_systemd_restart_sec }}
TimeoutStartSec={{ ul_coda19_green_systemd_timeout_start_sec }}

KillMode=none
PIDFile={{ ul_coda19_green_container_pidfile }}

[Install]
WantedBy=multi-user.target
